pipeline {
    agent any
    stages {
		stage('Source') { 
			steps {
				// Checkout
				checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/manaswithadanda/GHJavaTestNG.git']]])
			}
		}
		
		stage('Code Analysis') { 
			steps {
				//def sonarHome = tool name: 'GTSonarQubeConfig', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
				//withSonarQubeEnv('SonarSecretKey') {
				 //   sh "${sonarHome}/bin/mvn sonar:sonar"
				//}
				sh "/home/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonarqubescanner/bin/sonar-scanner -Dsonar.host.url=http://localhost:9000 -Dsonar.projectName=meanstackapp -Dsonar.projectVersion=1.0 -Dsonar.projectKey=meanstack:app -Dsonar.sources=. -Dsonar.projectBaseDir=/home/jenkins/workspace/sonarqube_test_pipeline"
			}
		}
    
	    	stage('Compile') { 
			tools {
				// Specify Tool Name from your global tool configuration
				jdk 'jdk8'
				maven 'MavenConfiguration'
			}
			steps {
				//Step
				powershell label: '', script: 'mvn clean package'
			}
		}
	}
	post {
        always {
		
			//Publich TestNG Result
			step([$class: 'Publisher'])
            
			//Sending Email
     		step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'manaswitha.danda@pratian.com', sendToIndividuals: false])
		}
    }
}
